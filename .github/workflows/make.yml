name: Compile all examples

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:trixie-slim
    steps:
    # 1. Install dependencies
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y build-essential python3 python3-pip python3-venv git wget xz-utils curl

    # 2. Set up Python venv
    - name: Setup Python virtual environment
      run: |
        python3 -m venv $GITHUB_WORKSPACE/venv --without-pip
        . $GITHUB_WORKSPACE/venv/bin/activate
        curl -sS https://bootstrap.pypa.io/get-pip.py | python
        pip install --upgrade pip
        pip install "fdt>=0.2.0" "pycryptodomex>=3.9.8" "toml>=0.10.2" "configobj>=5.0.6"

    # 3. Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
         submodules: recursive

    # 4. Download and extract compiler
    - name: Download and extract compiler
      run: |
        mkdir -p toolchain/compiler
        wget -q -O /tmp/toolchain.tar.xz https://github.com/ttefke/riscv-gnu-toolchain/releases/download/2025.08.29/suas-gcc-15-1.tar.xz
        tar -xJf /tmp/toolchain.tar.xz -C toolchain/compiler

    # 5. Build examples
    - name: Build examples
      run:  |
        . $GITHUB_WORKSPACE/venv/bin/activate
        export BL60X_SDK_PATH=$(pwd)
        export CONFIG_CHIP_NAME=BL602
        make
